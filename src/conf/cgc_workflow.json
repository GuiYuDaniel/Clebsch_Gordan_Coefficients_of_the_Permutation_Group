[
    "### CGC workflow ###",

    "### 论文中的流程描述 ###",
    "### 1，由Sn计算所有对应的配分（杨图） ###",
    "### 2，计算杨图对应的特征标 ###",
    "### 3，建立从特征标到对应杨图的信息 ###",
    "### 4，建立分支律 ###",
    "### 5，杨盘（杨盘是填了数字的杨图） ###",
    "### 6，建立（ij）临近交换矩阵 ###",
    "### 7，计算（in）交换矩阵 ###",
    "### 8，建立CG序列 ###",
    "### 9，计算ISF的CSCO矩阵（SUM_(i=1)（in））###",
    "### 10，解矩阵得到整体上有一个（-1）自由相位的ISF ###",
    "### 11，通过绝对相位规定、相对相位规定调整，使之同Yamanouchi相位相同 ###",
    "### 12，由n的ISF和（n - 1）的CG系数计算n的CG系数 ###",

    "### workflow图 ###",
    "### l: layer, n: node",
    "###                                               ###",
    "### l1n1 -> l2n1 -> l3n1 -> l4n1        ###",
    "###      |                                ###",
    "###      -> l2n2 -> l3n2             ###",
    "###      |                                 ###",
    "###      -> l2n3             ###",
    {
        "name": "l1n1_young_diagrams",
        "func": ["None.src.core.young_diagrams", "create_young_diagrams", ""],
        "type": "cold",
        "inputs": ["input:::s_n:s_n"],
        "outputs": ["l1n1:::flag", "l1n1:::s_n:s_n"],
        "extra_args": [],
        "extra_kwargs": {},
        "next_nodes": ["l2n1_young_diagrams"],
        "flags": []
    },
    {
        "name": "l2n1_branching_laws",
        "func": ["None.src.core.branching_laws", "create_branching_laws", ""],
        "type": "cold",
        "inputs": ["l1n1:::s_n:s_n"],
        "outputs": ["l2n1:::flag", "l2n1:::s_n:s_n"],
        "extra_args": [],
        "extra_kwargs": {},
        "next_nodes": ["l3n1_young_tableaux"],
        "flags": []
    },
    {
        "name": "l3n1_young_tableaux",
        "func": ["None.src.core.young_tableaux", "create_young_tableaux", ""],
        "type": "cold",
        "inputs": ["l2n1:::s_n:s_n"],
        "outputs": ["l3n1:::flag", "l3n1:::s_n:s_n"],
        "extra_args": [],
        "extra_kwargs": {},
        "next_nodes": ["l4n1_yamanouchi_matrix"],
        "flags": []
    },
    {
        "name": "l4n1_yamanouchi_matrix",
        "func": ["None.src.core.yamanouchi_matrix", "create_yamanouchi_matrix", ""],
        "type": "cold",
        "inputs": ["l3n1:::s_n:s_n"],
        "outputs": ["l4n1:::flag", "l4n1:::s_n:s_n"],
        "extra_args": [],
        "extra_kwargs": {},
        "next_nodes": ["..."],
        "flags": []
    },
    {
        "name": "l2n2_characters_and_gi",
        "func": ["None.src.core.characters_and_gi", "create_characters_and_gi", ""],
        "type": "cold",
        "inputs": ["l1n1:::s_n:s_n"],
        "outputs": ["l2n2:::flag", "l2n2:::s_n:s_n"],
        "extra_args": [],
        "extra_kwargs": {},
        "next_nodes": ["l3n2_cg_series"],
        "flags": []
    },
    {
        "name": "l3n2_cg_series",
        "func": ["None.src.core.cg_series", "create_cg_series", ""],
        "type": "cold",
        "inputs": ["l2n2:::s_n:s_n"],
        "outputs": ["l3n2:::flag", "l3n2:::s_n:s_n"],
        "extra_args": [],
        "extra_kwargs": {},
        "next_nodes": ["..."],
        "flags": []
    },
    {
        "name": "l2n3_eigenvalues",
        "func": ["None.src.core.eigenvalues", "create_eigenvalues", ""],
        "type": "cold",
        "inputs": ["l1n1:::s_n:s_n"],
        "outputs": ["l2n3:::flag", "l2n3:::s_n:s_n"],
        "extra_args": [],
        "extra_kwargs": {},
        "next_nodes": ["..."],
        "flags": []
    }
]