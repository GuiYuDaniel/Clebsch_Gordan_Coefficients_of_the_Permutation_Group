workflow是规定pipeline按照什么顺序，执行哪些函数的定义文件

1，workflow必须是关于节点(函数)的一个有向无环图（DAG）
2，请使用json格式编写workflow（可使用https://www.json.cn，https://www.bejson.com等网站校验json）
3，格式为[{每个节点的信息},...,"###注释###",...]
4，其中，注释可以使用前后各三个#包围的str格式，解析后会自动滤掉
5，节点里每个参数的说明：
    name: 节点的名字（str），请保证该名字全局唯一
    func: [函数文件相对位置（str）, 函数名（str）, 函数别名（str）]
        函数文件相对位置：None.顶层目录后的位置  # 目前要求None后的目录在pythonpath里，未来可以开放为任意位置
        函数名：就是本节点希望调用的函数名字
        函数别名：python支持from xxx import yyy as zzz，就是这个zzz
    type: 目前仅支持"cold"模式
    inputs: [函数入参的名字（str）,...]
    outputs: [函数出参的名字（str）,...]
        参数的命名规则如下：
            1，三段式命名:
                例如："param1:::flag:flag_name"
                表示：本节点函数定义中的参数flag_name，在管道中对应的参数名为param1:::flag
                其中：
                    尾段，函数参数名：输入或输出参数在函数中定义的名字
                    中段，管道参数名：管道传递中，参数使用的名字，一般以好记、达意为准
                    首段，前缀参数名：当管道参数同名时，区分不同参数的前缀，要求前缀+管道参数名全局唯一
                                                                    ^^^^^^^^^^^^^^^^^^^
                （建议多使用）
                 ^^^^^^^^^
            2，支持省略前缀简写命名：
                例如："flag:flag_name"
                表示：本节点函数定义中的参数flag_name，在管道中对应的参数名为flag
                其中：
                    要求管道参数名全局唯一，函数参数名是输入或输出参数在函数中定义的名字
                       ^^^^^^^^^^^^^^^
                （常见于管道参数名不冲突的情况）
            3，支持省略函数参数名简写：
                例如："param1:::flag"
                表示：本节点函数定义中的参数flag，在管道中对应的参数名为param1:::flag
                其中：
                    要求前缀+管道参数名全局唯一
                       ^^^^^^^^^^^^^^^^^^^
                （常见于管道参数名与函数参数名同名）
            4，支持一段式简写：
                例如："flag"
                表示：本节点函数定义中的参数flag，在管道中对应的参数名为flag
                其中：
                    要求该变量名字全局唯一
                               ^^^^^^^
                （常见于非常简单的workflow中，参数名称本不冲突，且管道参数名，就是函数参数名）
    next_nodes: [本节点直接指向的后续节点的名字（str）,...]
    extra_args: 暂未开放该功能
    extra_kwargs: 暂未开放该功能
    flags: [] 暂未开放该功能